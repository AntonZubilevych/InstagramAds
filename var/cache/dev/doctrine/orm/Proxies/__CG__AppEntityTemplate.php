<?php

namespace Proxies\__CG__\App\Entity;

/**
 * DO NOT EDIT THIS FILE - IT WAS CREATED BY DOCTRINE'S PROXY GENERATOR
 */
class Template extends \App\Entity\Template implements \Doctrine\ORM\Proxy\Proxy
{
    /**
     * @var \Closure the callback responsible for loading properties in the proxy object. This callback is called with
     *      three parameters, being respectively the proxy object to be initialized, the method that triggered the
     *      initialization process and an array of ordered parameters that were passed to that method.
     *
     * @see \Doctrine\Common\Persistence\Proxy::__setInitializer
     */
    public $__initializer__;

    /**
     * @var \Closure the callback responsible of loading properties that need to be copied in the cloned object
     *
     * @see \Doctrine\Common\Persistence\Proxy::__setCloner
     */
    public $__cloner__;

    /**
     * @var boolean flag indicating if this object was already initialized
     *
     * @see \Doctrine\Common\Persistence\Proxy::__isInitialized
     */
    public $__isInitialized__ = false;

    /**
     * @var array properties to be lazy loaded, with keys being the property
     *            names and values being their default values
     *
     * @see \Doctrine\Common\Persistence\Proxy::__getLazyProperties
     */
    public static $lazyPropertiesDefaults = [];



    /**
     * @param \Closure $initializer
     * @param \Closure $cloner
     */
    public function __construct($initializer = null, $cloner = null)
    {

        $this->__initializer__ = $initializer;
        $this->__cloner__      = $cloner;
    }







    /**
     * 
     * @return array
     */
    public function __sleep()
    {
        if ($this->__isInitialized__) {
            return ['__isInitialized__', '' . "\0" . 'App\\Entity\\Template' . "\0" . 'id', '' . "\0" . 'App\\Entity\\Template' . "\0" . 'product', '' . "\0" . 'App\\Entity\\Template' . "\0" . 'title', '' . "\0" . 'App\\Entity\\Template' . "\0" . 'favicon', '' . "\0" . 'App\\Entity\\Template' . "\0" . 'topBackground', '' . "\0" . 'App\\Entity\\Template' . "\0" . 'bottomBackground', '' . "\0" . 'App\\Entity\\Template' . "\0" . 'topImg', '' . "\0" . 'App\\Entity\\Template' . "\0" . 'comments', '' . "\0" . 'App\\Entity\\Template' . "\0" . 'descriptions', '' . "\0" . 'App\\Entity\\Template' . "\0" . 'bottomImg', '' . "\0" . 'App\\Entity\\Template' . "\0" . 'middleBackground', '' . "\0" . 'App\\Entity\\Template' . "\0" . 'motto', '' . "\0" . 'App\\Entity\\Template' . "\0" . 'infos'];
        }

        return ['__isInitialized__', '' . "\0" . 'App\\Entity\\Template' . "\0" . 'id', '' . "\0" . 'App\\Entity\\Template' . "\0" . 'product', '' . "\0" . 'App\\Entity\\Template' . "\0" . 'title', '' . "\0" . 'App\\Entity\\Template' . "\0" . 'favicon', '' . "\0" . 'App\\Entity\\Template' . "\0" . 'topBackground', '' . "\0" . 'App\\Entity\\Template' . "\0" . 'bottomBackground', '' . "\0" . 'App\\Entity\\Template' . "\0" . 'topImg', '' . "\0" . 'App\\Entity\\Template' . "\0" . 'comments', '' . "\0" . 'App\\Entity\\Template' . "\0" . 'descriptions', '' . "\0" . 'App\\Entity\\Template' . "\0" . 'bottomImg', '' . "\0" . 'App\\Entity\\Template' . "\0" . 'middleBackground', '' . "\0" . 'App\\Entity\\Template' . "\0" . 'motto', '' . "\0" . 'App\\Entity\\Template' . "\0" . 'infos'];
    }

    /**
     * 
     */
    public function __wakeup()
    {
        if ( ! $this->__isInitialized__) {
            $this->__initializer__ = function (Template $proxy) {
                $proxy->__setInitializer(null);
                $proxy->__setCloner(null);

                $existingProperties = get_object_vars($proxy);

                foreach ($proxy->__getLazyProperties() as $property => $defaultValue) {
                    if ( ! array_key_exists($property, $existingProperties)) {
                        $proxy->$property = $defaultValue;
                    }
                }
            };

        }
    }

    /**
     * 
     */
    public function __clone()
    {
        $this->__cloner__ && $this->__cloner__->__invoke($this, '__clone', []);
    }

    /**
     * Forces initialization of the proxy
     */
    public function __load()
    {
        $this->__initializer__ && $this->__initializer__->__invoke($this, '__load', []);
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __isInitialized()
    {
        return $this->__isInitialized__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setInitialized($initialized)
    {
        $this->__isInitialized__ = $initialized;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setInitializer(\Closure $initializer = null)
    {
        $this->__initializer__ = $initializer;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __getInitializer()
    {
        return $this->__initializer__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setCloner(\Closure $cloner = null)
    {
        $this->__cloner__ = $cloner;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific cloning logic
     */
    public function __getCloner()
    {
        return $this->__cloner__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     * @static
     */
    public function __getLazyProperties()
    {
        return self::$lazyPropertiesDefaults;
    }

    
    /**
     * {@inheritDoc}
     */
    public function getTopBackground()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getTopBackground', []);

        return parent::getTopBackground();
    }

    /**
     * {@inheritDoc}
     */
    public function setTopBackground($topBackground): void
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setTopBackground', [$topBackground]);

        parent::setTopBackground($topBackground);
    }

    /**
     * {@inheritDoc}
     */
    public function getBottomBackground()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getBottomBackground', []);

        return parent::getBottomBackground();
    }

    /**
     * {@inheritDoc}
     */
    public function setBottomBackground($bottomBackground): void
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setBottomBackground', [$bottomBackground]);

        parent::setBottomBackground($bottomBackground);
    }

    /**
     * {@inheritDoc}
     */
    public function getId(): ?int
    {
        if ($this->__isInitialized__ === false) {
            return (int)  parent::getId();
        }


        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getId', []);

        return parent::getId();
    }

    /**
     * {@inheritDoc}
     */
    public function getProduct(): ?\App\Entity\Product
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getProduct', []);

        return parent::getProduct();
    }

    /**
     * {@inheritDoc}
     */
    public function setProduct(?\App\Entity\Product $product): \App\Entity\Template
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setProduct', [$product]);

        return parent::setProduct($product);
    }

    /**
     * {@inheritDoc}
     */
    public function getTitle(): ?string
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getTitle', []);

        return parent::getTitle();
    }

    /**
     * {@inheritDoc}
     */
    public function setTitle(string $title): \App\Entity\Template
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setTitle', [$title]);

        return parent::setTitle($title);
    }

    /**
     * {@inheritDoc}
     */
    public function getFavicon(): ?string
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getFavicon', []);

        return parent::getFavicon();
    }

    /**
     * {@inheritDoc}
     */
    public function setFavicon(string $favicon): \App\Entity\Template
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setFavicon', [$favicon]);

        return parent::setFavicon($favicon);
    }

    /**
     * {@inheritDoc}
     */
    public function getTopImg(): ?string
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getTopImg', []);

        return parent::getTopImg();
    }

    /**
     * {@inheritDoc}
     */
    public function setTopImg(string $topImg): \App\Entity\Template
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setTopImg', [$topImg]);

        return parent::setTopImg($topImg);
    }

    /**
     * {@inheritDoc}
     */
    public function getComments(): \Doctrine\Common\Collections\Collection
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getComments', []);

        return parent::getComments();
    }

    /**
     * {@inheritDoc}
     */
    public function addComment(\App\Entity\TemplatesComment $comment): \App\Entity\Template
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'addComment', [$comment]);

        return parent::addComment($comment);
    }

    /**
     * {@inheritDoc}
     */
    public function removeComment(\App\Entity\TemplatesComment $comment): \App\Entity\Template
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'removeComment', [$comment]);

        return parent::removeComment($comment);
    }

    /**
     * {@inheritDoc}
     */
    public function getDescriptions(): \Doctrine\Common\Collections\Collection
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getDescriptions', []);

        return parent::getDescriptions();
    }

    /**
     * {@inheritDoc}
     */
    public function addDescription(\App\Entity\TemplatesDescription $description): \App\Entity\Template
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'addDescription', [$description]);

        return parent::addDescription($description);
    }

    /**
     * {@inheritDoc}
     */
    public function removeDescription(\App\Entity\TemplatesDescription $description): \App\Entity\Template
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'removeDescription', [$description]);

        return parent::removeDescription($description);
    }

    /**
     * {@inheritDoc}
     */
    public function getBottomImg(): ?string
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getBottomImg', []);

        return parent::getBottomImg();
    }

    /**
     * {@inheritDoc}
     */
    public function setBottomImg(?string $bottomImg): \App\Entity\Template
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setBottomImg', [$bottomImg]);

        return parent::setBottomImg($bottomImg);
    }

    /**
     * {@inheritDoc}
     */
    public function getMiddleBackground(): ?string
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getMiddleBackground', []);

        return parent::getMiddleBackground();
    }

    /**
     * {@inheritDoc}
     */
    public function setMiddleBackground(string $middleBackground): \App\Entity\Template
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setMiddleBackground', [$middleBackground]);

        return parent::setMiddleBackground($middleBackground);
    }

    /**
     * {@inheritDoc}
     */
    public function getMotto(): ?string
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getMotto', []);

        return parent::getMotto();
    }

    /**
     * {@inheritDoc}
     */
    public function setMotto(?string $motto): \App\Entity\Template
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setMotto', [$motto]);

        return parent::setMotto($motto);
    }

    /**
     * {@inheritDoc}
     */
    public function getInfos(): \Doctrine\Common\Collections\Collection
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getInfos', []);

        return parent::getInfos();
    }

    /**
     * {@inheritDoc}
     */
    public function addInfo(\App\Entity\Info $info): \App\Entity\Template
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'addInfo', [$info]);

        return parent::addInfo($info);
    }

    /**
     * {@inheritDoc}
     */
    public function removeInfo(\App\Entity\Info $info): \App\Entity\Template
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'removeInfo', [$info]);

        return parent::removeInfo($info);
    }

}
